AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless IT Support Automation Platform (DynamoDB + Lambda + API
  Gateway + S3)

Globals:
  Function:
    Runtime: python3.10
    Timeout: 10

Resources:

  TicketsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Tickets
      AttributeDefinitions:
        - AttributeName: ticketId
          AttributeType: S
      KeySchema:
        - AttributeName: ticketId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  TicketProcessorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-TicketProcessor
      Handler: ticket_processor.lambda_handler
      CodeUri: ../src/lambda/
      Environment:
        Variables:
          TABLE_NAME: !Ref TicketsTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TicketsTable
      Events:
        CreateTicketApi:
          Type: Api
          Properties:
            Path: /tickets
            Method: post
            RestApiId: !Ref ServerlessRestApi

  ServerlessRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  StaticSiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${AWS::StackName}-frontend-${AWS::AccountId}
      WebsiteConfiguration:
        IndexDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  StaticSiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticSiteBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: s3:GetObject
            Resource: !Sub '${StaticSiteBucket}/*'

Outputs:
  TicketsTableName:
    Value: !Ref TicketsTable
    Export:
      Name: !Sub ${AWS::StackName}-TicketsName

  FrontendBucketName:
    Value: !Ref StaticSiteBucket
    Export:
      Name: !Sub ${AWS::StackName}-FrontendBucket

  WebsiteURL:
    Value: !GetAtt StaticSiteBucket.WebsiteURL
    Description: URL for website hosted on S3

  ApiGatewayApi:
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
    Description: API Gateway endpoint URL